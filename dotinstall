#!/bin/bash

unset dotdir

shopt -s dotglob #Allow globbing on dotfiles

default_dir="${HOME}/.dot"
override=$(hostname)
excludes=(".git")

# Determines if a given file is excluded.
excluded() {
    for exclude in ${excludes[@]}; do
        if [[ "$(basename "${1}")" == "${exclude}" ]]; then
            return 0
        fi
    done
    return 1
}

# Links dotfiles in ${@} to the current directory.
link_dotfiles() {
    for dot in "${@}/"*; do
        if excluded "${dot}"; then
            continue
        fi
        ln -vs "${dot}" 
    done
}

if [[ -z "${dotdir}" ]]; then
    # Can we use the default dot directory?
    if [[ -e "${default_dir}" ]]; then
        dotdir="${default_dir}"
    fi

    # How about the DOTDIR environment variable? (overrides the default dir)
    if [[ -n "${DOTDIR}" ]]; then
        dotdir="${DOTDIR}"
    fi

    # Didn't find a dotfile directory.
    if [[ -z "${dotdir}" ]]; then
        echo "Could not locate dotfile directory!"
        exit 1
    fi
fi

if [[ ! -e "${dotdir}" ]]; then
    echo "Dotfile directory could not be found: ${dotdir}"
    exit 1
fi

cd "${dotdir}"
echo "Updating dotfile repository from master."
git checkout master && (git remote update -p; git merge --ff-only '@{u}')

cd "${HOME}"

overdir="${dotdir}/${override}"
if [[ -d "${overdir}" ]]; then
    echo "Configuration: ${override}"
    link_dotfiles "${overdir}"
fi

echo "Configuration: core"
link_dotfiles "${dotdir}"
